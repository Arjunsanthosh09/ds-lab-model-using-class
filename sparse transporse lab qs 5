#include <iostream>
#include <conio.h>
using namespace std;

class SparseMatrix
{
public:
    int a[10][10];
    int c[10][3];
    int k;
    int row, col;

    void insertMatrix();
    void sparseMatrixImp();
    void display();
    void transpose();

    SparseMatrix()
    {
        k = 1; // Initializing k to 1
    }
};

void SparseMatrix::insertMatrix()
{
    cout << "\nEnter the number of rows and columns in the matrix: ";
    cin >> row >> col;

    cout << "\nEnter the elements into the matrix:\n";
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            cin >> a[i][j];
        }
    }
}

void SparseMatrix::sparseMatrixImp()
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            if (a[i][j] != 0)
            {
                c[k][0] = i;
                c[k][1] = j;
                c[k][2] = a[i][j];
                k++;
            }
        }
    }
    c[0][0] = row;
    c[0][1] = col;
    c[0][2] = k - 1; // Adjust k to the correct count of non-zero elements
}

void SparseMatrix::display()
{
    cout << "\nSparse matrix of the matrix is: \n";
    for (int i = 1; i <= c[0][2]; i++)
    {
        cout << c[i][0] << "\t" << c[i][1] << "\t" << c[i][2] << "\n";
    }
}

void SparseMatrix::transpose()
{
    int temp = c[0][0];
    c[0][0] = c[0][1];
    c[0][1] = temp;

    for (int i = 1; i <= c[0][2]; i++)
    {
        temp = c[i][0];
        c[i][0] = c[i][1];
        c[i][1] = temp;
    }
}

int main()
{
    SparseMatrix obj1;

    cout << "\nEnter the number of rows and columns in the matrix: ";
    obj1.insertMatrix();
    obj1.sparseMatrixImp();

    cout << "\n\nOriginal Sparse Matrix:\n";
    obj1.display();

    obj1.transpose();

    cout << "\n\nTranspose of Sparse Matrix:\n";
    obj1.display();

    return 0;
}
